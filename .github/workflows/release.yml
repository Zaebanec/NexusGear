name: Release Frontend

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  build_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: vue-project/package-lock.json

      - name: Install deps
        working-directory: vue-project
        run: npm ci --no-audit --no-fund

      - name: Lint
        working-directory: vue-project
        run: npm run lint

      - name: Build
        working-directory: vue-project
        run: npm run build

      - name: Archive dist
        run: |
          cd vue-project
          tar -czf dist.tar.gz dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: vue-project/dist.tar.gz
          generate_release_notes: true

  docker_image:
    needs: build_release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push (tag version)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy_static:
    if: ${{ secrets.SSH_HOST != '' }}
    needs: build_release
    runs-on: ubuntu-latest
    steps:
      - name: Download dist artifact from release
        uses: dawidd6/action-download-artifact@v7
        with:
          workflow: release.yml
          workflow_conclusion: success
          name: frontend-dist
          if_no_artifact_found: warn
      - name: Extract
        run: |
          if [ -f dist.tar.gz ]; then tar -xzf dist.tar.gz; fi
      - name: Rsync to server
        uses: burnett01/rsync-deployments@7.0.1
        with:
          switches: -avzr --delete
          path: dist/
          remote_path: ${{ secrets.SSH_PATH || '/var/www/nexus-gear-store/src/presentation/web/static/' }}
          remote_host: ${{ secrets.SSH_HOST }}
          remote_user: ${{ secrets.SSH_USER || 'root' }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}


